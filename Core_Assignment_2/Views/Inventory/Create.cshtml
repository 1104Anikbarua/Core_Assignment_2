@model Core_Assignment_2.Models.InventoryModel

@{
	ViewData["Title"] = "Add Product";
}


<div class="container d-flex align-items-center justify-content-center" style="height:80vh">
<div class="card" style="width:400px">
	<div class="card-header">
		<h5>@ViewData["Title"]</h5>
	</div>
	<div class="card-body">
		<form asp-action="Create" method="post">
			<div class="form-group">
				<label asp-for="Name" class="control-label"></label>
				<input asp-for="Name" class="form-control" />
				<span asp-validation-for="Name" class="text-danger"></span>
			</div>

			<div class="form-group">
				<label asp-for="Category" class="control-label"></label>
				<input asp-for="Category" class="form-control" />
				<span asp-validation-for="Category" class="text-danger"></span>
			</div>

			<div class="form-group">
				<label asp-for="Price" class="control-label"></label>
				<input asp-for="Price" class="form-control" />
				<span asp-validation-for="Price" class="text-danger"></span>
			</div>

			<div class="form-group mb-2">
				<label asp-for="Quantity" class="control-label"></label>
				<input asp-for="Quantity" class="form-control" />
				<span asp-validation-for="Quantity" class="text-danger"></span>
			</div>

			<button type="submit" class="btn btn-success">Add Product</button>
			<a asp-action="Index" class="btn btn-secondary">Cancel</a>
		</form>
	</div>
</div>
</div>
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
