@model IEnumerable<Core_Assignment_2.Models.InventoryModel>

@{
	ViewData["Title"] = "Inventory Management System";
}

<div class="card">
	<div class="card-body">
		<h2 class="fw-bold"><i class="bi bi-boxes"></i> @ViewData["Title"]</h2>
		<p class="my-1">
			<a class="btn btn-dark fw-bold" asp-action="Create">
				<i class="bi bi-plus-lg"></i>
				Add Product
			</a>
		</p>
		@* Search & Filter Start *@
		<div class="card my-5">
			<div class="card-body">
				<form method="get">
					<div class="row">
						<div class="col-4">
							<label class="visually-hidden" for="inlineFormInputGroupUsername">Search</label>
							<div class="input-group">
								<div class="input-group-text"><i class="bi bi-search"></i></div>
								<input type="text" class="form-control" id="inlineFormInputGroupUsername" name="searchString" placeholder="Search by product name..." value="@Context.Request.Query["searchString"]">
							</div>
						</div>
						<div class="col-4">
							@* <select name="categoryFilter"> *@
							@* 	<option value="">All Categories</option> *@
							@* 	@foreach (var category in (SelectList)ViewBag.Categories) *@
							@* 	{ *@
							@* 		<option value="@category.Text" *@
							@* 				selected="@(Context.Request.Query["categoryFilter"] == category.Text ? "selected" : null)"> *@
							@* 			@category.Text *@
							@* 		</option> *@
							@* 	} *@
							@* </select> *@
							@* // *@

							<label class="visually-hidden" for="specificSizeSelect">Preference</label>
							<select class="form-select" id="specificSizeSelect" name="categoryFilter">
								<option value="">All Categories</option>
								@foreach (var category in (SelectList)ViewBag.Categories)
								{
									<option value="@category.Text"
											selected="@(Context.Request.Query["categoryFilter"] == category.Text ? "selected" : null)">
										@category.Text
									</option>
								}
							</select>
						</div>
						<div class="col-3">
							<button type="submit" class="btn btn-primary">Search</button>
						</div>

					</div>
				</form>
			</div>
		</div>
		@* Search & Filter End  *@

		<div class="card">
			<div class="card-body">
				<table class="table table-bordered table-striped">
					<thead class="thead-dark">
						<tr>
							<th>ID</th>
							<th>Name</th>
							<th>Category</th>
							<th>Price</th>
							<th>Quantity</th>
							<th>Status</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model)
						{
							<tr>
								<td>@item.Id</td>
								<td>@item.Name</td>
								<td>@item.Category</td>
								<td>@item.Price.ToString("C")</td>
								<td>@item.Quantity</td>
								<td>
									@if (item.Quantity == 0)
									{
										<span class="badge bg-danger">Out of Stock</span>
									}
									else if (item.Quantity < 10)
									{
										<span class="badge bg-warning text-dark">Low Stock</span>
									}
									else
									{
										<span class="badge bg-success">In Stock</span>
									}
								</td>
								<td>
									<a class="btn btn-info btn-sm">View</a>
									<button type="button" class="btn btn-warning btn-sm edit-btn text-white" data-id="@item.Id">
										<i class="bi bi-pencil-square text-white"></i>
										Edit
									</button>
									<a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">
										<i class="bi bi-trash"></i>
										Delete
									</a>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		@* Modal start here  *@

		<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
			<div class="modal-dialog" role="document">
				<form id="editForm">
					@Html.AntiForgeryToken()
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title">Edit Product</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<input type="hidden" id="editId" name="Id" />

							<div class="mb-3">
								<label for="editName" class="form-label">Name</label>
								<input type="text" class="form-control" id="editName" name="Name" required />
							</div>
							<div class="mb-3">
								<label for="editCategory" class="form-label">Category</label>
								<input type="text" class="form-control" id="editCategory" name="Category" required />
							</div>
							<div class="mb-3">
								<label for="editPrice" class="form-label">Price</label>
								<input type="number" class="form-control" id="editPrice" name="Price" required min="0" step="0.01" />
							</div>
							<div class="mb-3">
								<label for="editQuantity" class="form-label">Quantity</label>
								<input type="number" class="form-control" id="editQuantity" name="Quantity" required min="0" />
							</div>
						</div>
						<div class="modal-footer">
							<button type="submit" class="btn btn-primary">Save changes</button>
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>


@* Modal End here  *@

@* Scripts Start  *@
@section Scripts {
	<script>
		$(document).ready(function () {

			$('.edit-btn').click(function () {
				var id = $(this).data('id');

				$.get('/Inventory/Edit/' + id, function (data) {
					$('#editId').val(data.id);
					$('#editName').val(data.name);
					$('#editCategory').val(data.category);
					$('#editPrice').val(data.price);
					$('#editQuantity').val(data.quantity);

					var modal = new bootstrap.Modal(document.getElementById('editModal'));
					modal.show();
				});
			});


			$('#editForm').submit(function (e) {
				e.preventDefault();

				var formData = $(this).serialize();
				var id = $('#editId').val();

				$.ajax({
					url: '/Inventory/Edit/' + id,
					type: 'POST',
					data: formData,
					headers: {
						'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
					},
					success: function () {
						bootstrap.Modal.getInstance(document.getElementById('editModal')).hide();
						location.reload();
					},
					error: function (xhr) {
						if (xhr.status === 400) {
							alert("Validation failed. Please fill out all fields correctly.");
						} else {
							alert("Update failed. Please try again.");
						}
					}
				});
			});
		});
	</script>
}


@* Scripts End *@